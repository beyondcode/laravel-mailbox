name: run-tests

on: [push, pull_request]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                php: [7.4, 8.0, 8.1]
                laravel: [9.*, 8.*, 7.*, 6.*]
                stability: [prefer-stable]
                exclude:
                    -   php: 7.4
                        laravel: 9.*
                    -   php: 8.1
                        laravel: 7.*
                    -   php: 8.1
                        laravel: 6.*
                include:
                    -   laravel: 9.*
                        testbench: 7.*
                    -   laravel: 8.*
                        testbench: 6.23
                    -   laravel: 7.*
                        testbench: 5.20.0
                    -   laravel: 6.*
                        testbench: 4.18.0

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
                    coverage: none
            #            - name: Setup problem matchers
            #              run: |
            #                  echo "::add-matcher::${{ runner.tool_cache }}/php.json"
            #                  echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
            #
            -   name: Install dependencies
                run: |
                    composer install
                    composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                    composer update --${{ matrix.stability }} --prefer-dist --no-interaction

            -   name: Execute tests
                run: vendor/bin/phpunit
